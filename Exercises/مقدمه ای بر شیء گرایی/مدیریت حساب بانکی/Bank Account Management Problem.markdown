# تمرین پیاده‌سازی کلاس: مدیریت حساب بانکی

این سوال برای تمرین مفاهیم شیءگرایی و پیاده‌سازی کلاس در زبان C++ طراحی شده است.

- **محدودیت زمان**: ۱ ثانیه
- **محدودیت حافظه**: ۲۵۶ مگابایت

---

## شرح مسئله

شما باید یک سیستم ساده برای مدیریت حساب‌های بانکی طراحی کنید. برای این منظور، باید یک کلاس به نام `BankAccount` پیاده‌سازی کنید که اطلاعات یک حساب بانکی (شامل نام صاحب حساب، شماره حساب و موجودی) را ذخیره کند و امکان انجام عملیات‌های مختلفی مانند واریز، برداشت، انتقال و بررسی وضعیت حساب را فراهم کند.

### مشخصات کلاس `BankAccount`

کلاس `BankAccount` باید شامل ویژگی‌ها و متدهای زیر باشد:

#### ویژگی‌ها
- `ownerName`: نام صاحب حساب (رشته، بدون فاصله).
- `accountNumber`: شماره حساب (عدد صحیح).
- `balance`: موجودی حساب (عدد اعشاری، حداقل 0).

#### سازنده
- یک سازنده که نام صاحب حساب، شماره حساب و موجودی اولیه را دریافت کرده و ویژگی‌ها را مقداردهی کند.

#### مخرب
- یک مخرب که پیامی با فرمت `"Account X is being closed."` چاپ کند، که `X` شماره حساب است.

#### متدها
- `deposit`: مقداری به موجودی حساب اضافه کند (اگر مقدار مثبت باشد) و پیام مناسب چاپ کند.
- `withdraw`: مقداری از موجودی حساب کم کند (اگر مقدار معتبر باشد و موجودی کافی باشد) و پیام مناسب چاپ کند.
- `transfer`: مقداری به حساب دیگر (یک شیء دیگر از کلاس `BankAccount`) منتقل کند (اگر مقدار معتبر باشد و موجودی کافی باشد) و پیام مناسب چاپ کند.
- `checkBalance`: موجودی فعلی حساب را بررسی کرده و پیام مناسب چاپ کند.
- `applyInterest`: سود سالانه‌ای به موجودی اضافه کند (بر اساس نرخ سود ورودی) و پیام مناسب چاپ کند.

#### متدهای Getter و Setter
- متدهای getter برای دریافت مقادیر `ownerName`، `accountNumber` و `balance`.
- متدهای setter برای تنظیم مقادیر `ownerName` و `balance` (برای `accountNumber` setter لازم نیست).

### وظیفه شما
برنامه‌ای بنویسید که:
1. یک کلاس `BankAccount` با مشخصات بالا پیاده‌سازی کند.
2. دو شیء از کلاس `BankAccount` با مقادیر اولیه‌ای که از ورودی دریافت می‌شود، ایجاد کند (برای حساب مبدا و مقصد تراکنش‌ها).
3. عملیاتی (واریز، برداشت، انتقال، بررسی موجودی یا اعمال سود) را بر اساس ورودی انجام دهد.
4. برای هر عملیات، پیام مناسب مرتبط با متد چاپ شود.

---

## ورودی

ورودی شامل چند خط است:
- **خط اول**: شامل سه مقدار برای حساب اول:
  - نام صاحب حساب (رشته بدون فاصله).
  - شماره حساب (عدد صحیح).
  - موجودی اولیه (عدد اعشاری).
- **خط دوم**: شامل سه مقدار برای حساب دوم:
  - نام صاحب حساب (رشته بدون فاصله).
  - شماره حساب (عدد صحیح).
  - موجودی اولیه (عدد اعشاری).
- **خط سوم**: شامل یک عدد صحیح $q$ که تعداد عملیات را نشان می‌دهد.
- **$q$ خط بعدی**: هر خط یک عملیات را مشخص می‌کند:
  - $op = 1$: شامل عدد $1$ و یک عدد اعشاری $amount$ (واریز به حساب اول با متد `deposit`).
  - $op = 2$: شامل عدد $2$ و یک عدد اعشاری $amount$ (برداشت از حساب اول با متد `withdraw`).
  - $op = 3$: شامل عدد $3$ و یک عدد اعشاری $amount$ (انتقال از حساب اول به حساب دوم با متد `transfer`).
  - $op = 4$: شامل عدد $4$ (بررسی موجودی حساب اول با متد `checkBalance`).
  - $op = 5$: شامل عدد $5$ و یک عدد اعشاری $rate$ (اعمال سود به حساب اول با متد `applyInterest`).

**محدودیت‌ها**:
- $1 \le \text{accountNumber} \le 10^6$
- $0 \le \text{balance}, \text{amount}, \text{rate} \le 10^4$
- $1 \le q \le 100$
- نرخ سود ($rate$) به درصد است (مثلاً 5 یعنی 5%).

---

## خروجی

برای هر عملیات ($op = 1, 2, 3, 4, 5$)، پیام مناسب مرتبط با متد چاپ شود:
- برای $op = 1$:
  - اگر واریز انجام شود: `"Deposited X, new balance is Y."` (X مقدار واریز و Y موجودی جدید با ۲ رقم اعشار).
  - در غیر این صورت: `"Invalid deposit amount."`
- برای $op = 2$:
  - اگر برداشت انجام شود: `"Withdrew X, new balance is Y."` (X مقدار برداشت و Y موجودی جدید با ۲ رقم اعشار).
  - در غیر این صورت: `"Invalid withdrawal amount or insufficient balance."`
- برای $op = 3$:
  - اگر انتقال انجام شود: `"Transferred X to account Z, new balance is Y."` (X مقدار انتقال، Z شماره حساب مقصد، Y موجودی جدید حساب مبدا با ۲ رقم اعشار).
  - در غیر این صورت: `"Invalid transfer amount or insufficient balance."`
- برای $op = 4$:
  - همیشه: `"Current balance is X."` (X موجودی فعلی با ۲ رقم اعشار).
- برای $op = 5$:
  - اگر سود اعمال شود: `"Interest applied, new balance is X."` (X موجودی جدید با ۲ رقم اعشار).
  - در غیر این صورت: `"Invalid interest rate."`

در انتها، پیام‌های مخرب برای هر دو حساب به ترتیب چاپ می‌شوند: ابتدا برای حساب دوم (`account2`) و سپس برای حساب اول (`account1`).

---

## مثال‌ها

### مثال ۱

**ورودی**:
```
Ali 12345 1000.0
Sara 67890 500.0
5
1 200.0
2 300.0
3 400.0
4
5 5.0
```

**خروجی**:
```
Deposited 200.00, new balance is 1200.00.
Withdrew 300.00, new balance is 900.00.
Transferred 400.00 to account 67890, new balance is 500.00.
Current balance is 500.00.
Interest applied, new balance is 525.00.
Account 67890 is being closed.
Account 12345 is being closed.
```

**توضیحات**:
- حساب اول با نام `Ali`، شماره حساب `12345` و موجودی `1000.0` و حساب دوم با نام `Sara`، شماره حساب `67890` و موجودی `500.0` ایجاد می‌شود.
- عملیات‌ها:
  - $op = 1, amount = 200.0$: واریز به حساب اول، موجودی به `1200.0` می‌رسد.
  - $op = 2, amount = 300.0$: برداشت از حساب اول، موجودی به `900.0` می‌رسد.
  - $op = 3, amount = 400.0$: انتقال به حساب دوم، موجودی حساب اول به `500.0` و حساب دوم به `900.0` می‌رسد.
  - $op = 4$: موجودی حساب اول (`500.0`) بررسی می‌شود.
  - $op = 5, rate = 5.0$: سود 5% به حساب اول اعمال می‌شود، موجودی به `525.0` می‌رسد.
- خروجی: پنج خط برای پنج عملیات، به علاوه پیام‌های مخرب به ترتیب (اول `67890`، بعد `12345`).

### مثال ۲

**ورودی**:
```
Reza 54321 200.0
Mina 98765 300.0
4
1 0.0
2 250.0
3 100.0
5 -1.0
```

**خروجی**:
```
Invalid deposit amount.
Invalid withdrawal amount or insufficient balance.
Transferred 100.00 to account 98765, new balance is 100.00.
Invalid interest rate.
Account 98765 is being closed.
Account 54321 is being closed.
```

**توضیحات**:
- حساب اول با نام `Reza`، شماره حساب `54321` و موجودی `200.0` و حساب دوم با نام `Mina`، شماره حساب `98765` و موجودی `300.0` ایجاد می‌شود.
- عملیات‌ها:
  - $op = 1, amount = 0.0$: مقدار نامعتبر است.
  - $op = 2, amount = 250.0$: موجودی کافی نیست.
  - $op = 3, amount = 100.0$: انتقال به حساب دوم، موجودی حساب اول به `100.0` و حساب دوم به `400.0` می‌رسد.
  - $op = 5, rate = -1.0$: نرخ سود نامعتبر است.
- خروجی: چهار خط برای چهار عملیات، به علاوه پیام‌های مخرب به ترتیب (اول `98765`، بعد `54321`).

---

## نکات
- اگر مقدار $amount$ یا $rate$ خارج از محدوده $[0, 10^4]$ باشد یا شرایط عملیات (مثل موجودی کافی) برقرار نباشد، پیام خطا چاپ شود.
- سود سالانه با فرمول ساده محاسبه می‌شود: $\text{balance} \times \frac{\text{rate}}{100}$.
- هر عملیات باید پیام مناسب متد را چاپ کند.
- از استاندارد C++11 یا بالاتر استفاده کنید.
- پیام‌های مخرب باید به ترتیب حساب دوم و سپس حساب اول چاپ شوند و در تست‌کیس‌ها لحاظ شوند.