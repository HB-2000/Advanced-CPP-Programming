# تمرین پیاده‌سازی کلاس: مدیریت کتاب‌های کتابخانه

این سوال برای تمرین مفاهیم شیءگرایی و پیاده‌سازی کلاس در زبان C++ طراحی شده است.

- **محدودیت زمان**: ۱ ثانیه
- **محدودیت حافظه**: ۲۵۶ مگابایت

---

## شرح مسئله

شما باید یک سیستم ساده برای مدیریت کتاب‌های یک کتابخانه طراحی کنید. برای این منظور، باید یک کلاس به نام `Book` پیاده‌سازی کنید که اطلاعات یک کتاب (شامل عنوان، کد کتاب و وضعیت امانت) را ذخیره کند و امکان انجام عملیات‌های مختلفی مانند امانت دادن، برگرداندن، تمدید امانت و بررسی وضعیت کتاب را فراهم کند.

### مشخصات کلاس `Book`

کلاس `Book` باید شامل ویژگی‌ها و متدهای زیر باشد:

#### ویژگی‌ها
- `title`: عنوان کتاب (رشته، بدون فاصله).
- `bookId`: کد کتاب (عدد صحیح).
- `isBorrowed`: وضعیت امانت (بولی، `true` اگر امانت داده شده، `false` اگر در کتابخانه است).
- `borrowDays`: تعداد روزهای امانت (عدد صحیح، 0 اگر کتاب امانت داده نشده).

#### سازنده
- یک سازنده که عنوان کتاب، کد کتاب و وضعیت اولیه (همیشه `isBorrowed = false` و `borrowDays = 0`) را دریافت کرده و ویژگی‌ها را مقداردهی کند.

#### مخرب
- یک مخرب که پیامی با فرمت `"Book X is being removed."` چاپ کند، که `X` کد کتاب است.

#### متدها
- `borrow`: کتاب را امانت دهد (اگر امانت داده نشده باشد) و تعداد روزهای امانت را تنظیم کند، سپس پیام مناسب چاپ کند.
- `returnBook`: کتاب را برگرداند (اگر امانت داده شده باشد) و پیام مناسب چاپ کند.
- `extendBorrow`: مدت امانت را تمدید کند (اگر امانت داده شده باشد) و پیام مناسب چاپ کند.
- `checkStatus`: وضعیت فعلی کتاب (امانت داده شده یا موجود) و تعداد روزهای امانت را بررسی کرده و پیام مناسب چاپ کند.
- `updateTitle`: عنوان کتاب را به‌روزرسانی کند (اگر رشته جدید خالی نباشد) و پیام مناسب چاپ کند.

#### متدهای Getter و Setter
- متدهای getter برای دریافت مقادیر `title`، `bookId`، `isBorrowed` و `borrowDays`.
- متدهای setter برای تنظیم مقادیر `title` (فقط اگر خالی نباشد) و `borrowDays` (فقط اگر غیرمنفی باشد). برای `bookId` و `isBorrowed` setter لازم نیست.

### وظیفه شما
برنامه‌ای بنویسید که:
1. یک کلاس `Book` با مشخصات بالا پیاده‌سازی کند.
2. دو شیء از کلاس `Book` با مقادیر اولیه‌ای که از ورودی دریافت می‌شود، ایجاد کند (برای مدیریت دو کتاب مختلف).
3. عملیاتی (امانت دادن، برگرداندن، تمدید امانت، بررسی وضعیت یا به‌روزرسانی عنوان) را بر اساس ورودی انجام دهد.
4. برای هر عملیات، پیام مناسب مرتبط با متد چاپ شود.

---

## ورودی

ورودی شامل چند خط است:
- **خط اول**: شامل دو مقدار برای کتاب اول:
  - عنوان کتاب (رشته بدون فاصله).
  - کد کتاب (عدد صحیح).
- **خط دوم**: شامل دو مقدار برای کتاب دوم:
  - عنوان کتاب (رشته بدون فاصله).
  - کد کتاب (عدد صحیح).
- **خط سوم**: شامل یک عدد صحیح $q$ که تعداد عملیات را نشان می‌دهد.
- **$q$ خط بعدی**: هر خط یک عملیات را مشخص می‌کند:
  - $op = 1$: شامل عدد $1$، یک عدد صحیح $bookNum$ (1 یا 2 برای انتخاب کتاب) و یک عدد صحیح $days$ (امانت دادن کتاب با متد `borrow`).
  - $op = 2$: شامل عدد $2$ و یک عدد صحیح $bookNum$ (برگرداندن کتاب با متد `returnBook`).
  - $op = 3$: شامل عدد $3$، یک عدد صحیح $bookNum$ و یک عدد صحیح $extraDays$ (تمدید امانت با متد `extendBorrow`).
  - $op = 4$: شامل عدد $4$ و یک عدد صحیح $bookNum$ (بررسی وضعیت کتاب با متد `checkStatus`).
  - $op = 5$: شامل عدد $5$، یک عدد صحیح $bookNum$ و یک رشته $newTitle$ (به‌روزرسانی عنوان با متد `updateTitle`).

**محدودیت‌ها**:
- $1 \le \text{bookId} \le 10^6$
- $0 \le \text{days}, \text{extraDays} \le 100$
- $1 \le q \le 100$
- $bookNum \in \{1, 2\}$
- رشته‌های `title` و `newTitle` بدون فاصله و حداکثر 100 کاراکتر هستند.

---

## خروجی

برای هر عملیات ($op = 1, 2, 3, 4, 5$)، پیام مناسب مرتبط با متد چاپ شود:
- برای $op = 1$:
  - اگر امانت انجام شود: `"Book X borrowed for Y days."` (X کد کتاب، Y تعداد روزهای امانت).
  - در غیر این صورت: `"Book X is already borrowed."`
- برای $op = 2$:
  - اگر کتاب برگردانده شود: `"Book X returned."` (X کد کتاب).
  - در غیر این صورت: `"Book X is not borrowed."`
- برای $op = 3$:
  - اگر تمدید انجام شود: `"Borrow period for book X extended by Y days, now Y+Z days."` (X کد کتاب، Y تعداد روزهای اضافه‌شده، Z تعداد کل روزهای امانت).
  - در غیر این صورت: `"Book X is not borrowed."`
- برای $op = 4$:
  - اگر کتاب امانت داده شده: `"Book X is borrowed for Y days."` (X کد کتاب، Y تعداد روزهای امانت).
  - اگر کتاب در کتابخانه است: `"Book X is available."` (X کد کتاب).
- برای $op = 5$:
  - اگر عنوان به‌روزرسانی شود: `"Title of book X updated to T."` (X کد کتاب، T عنوان جدید).
  - در غیر این صورت: `"Invalid title for book X."`

در انتها، پیام‌های مخرب برای هر دو کتاب به ترتیب چاپ می‌شوند: ابتدا برای کتاب دوم (`book2`) و سپس برای کتاب اول (`book1`).

---

## مثال‌ها

### مثال ۱

**ورودی**:
```
Math 12345
History 67890
5
1 1 10
4 1
3 1 5
2 1
4 1
```

**خروجی**:
```
Book 12345 borrowed for 10 days.
Book 12345 is borrowed for 10 days.
Borrow period for book 12345 extended by 5 days, now 15 days.
Book 12345 returned.
Book 12345 is available.
Book 67890 is being removed.
Book 12345 is being removed.
```

**توضیحات**:
- کتاب اول با عنوان `Math` و کد `12345` و کتاب دوم با عنوان `History` و کد `67890` ایجاد می‌شود.
- عملیات‌ها:
  - $op = 1, bookNum = 1, days = 10$: کتاب اول امانت داده می‌شود.
  - $op = 4, bookNum = 1$: وضعیت کتاب اول بررسی می‌شود (امانت داده شده).
  - $op = 3, bookNum = 1, extraDays = 5$: امانت کتاب اول تمدید می‌شود (10 + 5 = 15 روز).
  - $op = 2, bookNum = 1$: کتاب اول برگردانده می‌شود.
  - $op = 4, bookNum = 1$: وضعیت کتاب اول بررسی می‌شود (موجود).
- خروجی: پنج خط برای پنج عملیات، به علاوه پیام‌های مخرب (اول `67890`، بعد `12345`).

### مثال ۲

**ورودی**:
```
Physics 54321
Chemistry 98765
4
1 2 7
5 2 Biology
1 2 3
4 2
```

**خروجی**:
```
Book 98765 borrowed for 7 days.
Title of book 98765 updated to Biology.
Book 98765 is already borrowed.
Book 98765 is borrowed for 7 days.
Book 98765 is being removed.
Book 54321 is being removed.
```

**توضیحات**:
- کتاب اول با عنوان `Physics` و کد `54321` و کتاب دوم با عنوان `Chemistry` و کد `98765` ایجاد می‌شود.
- عملیات‌ها:
  - $op = 1, bookNum = 2, days = 7$: کتاب دوم امانت داده می‌شود.
  - $op = 5, bookNum = 2, newTitle = Biology$: عنوان کتاب دوم به‌روزرسانی می‌شود.
  - $op = 1, bookNum = 2, days = 3$: کتاب دوم قبلاً امانت داده شده.
  - $op = 4, bookNum = 2$: وضعیت کتاب دوم بررسی می‌شود (امانت داده شده).
- خروجی: چهار خط برای چهار عملیات، به علاوه پیام‌های مخرب (اول `98765`، بعد `54321`).

---

## نکات
- اگر کتاب امانت داده شده باشد، نمی‌توان دوباره امانت داد.
- برای تمدید یا برگرداندن، کتاب باید امانت داده شده باشد.
- روزهای امانت و تمدید باید غیرمنفی و حداکثر 100 باشند.
- عنوان جدید باید غیرخالی باشد.
- از استاندارد C++11 یا بالاتر استفاده کنید.
- پیام‌های مخرب باید به ترتیب کتاب دوم و سپس کتاب اول چاپ شوند و در تست‌کیس‌ها لحاظ شوند.